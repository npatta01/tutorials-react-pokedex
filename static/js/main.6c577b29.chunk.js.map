{"version":3,"sources":["containers/PokemonListDetailPage.module.css","containers/AboutPage.tsx","services/PokemonService.ts","components/PokemonCard.tsx","containers/PokemonListDetailPage.tsx","containers/PokemonDetailPage.tsx","components/NavHeader.tsx","App.tsx","serviceWorker.ts","index.tsx","containers/PokemonDetailPage.module.css","components/PokemonCard.module.css"],"names":["module","exports","AboutPage","src","alt","href","striped","bordered","hover","title","width","height","frameBorder","allow","allowFullScreen","React","API_BASE","PokemonService","id","mock","pokemonId","Number","rawPokemonData","payloadPokemonDetail","rawPokemonEvolutionData","payloadPokemonEvolution","rawPokemonDescription","payloadPokemonDescription","urlDetail","axios","get","responseDetail","data","responseDescription","evolution_chain","url","responseEvolution","evolutions","this","extractEvolutionChain","pokemonData","name","weight","image","getImageUrl","types","map","t","type","abilities","a","ability","description","flavor_text_entries","filter","f","language","flavor_text","limit","pokemons","payloadPokemons","results","queryParams","params","response","forEach","p","index","paddedId","toString","padStart","chain","evoChain","evoData","species","idStr","split","reverse","push","evolves_to","PokemonCard","pokemon","props","className","styles","card","to","PokemonListDetailPage","getPokemons","setState","state","container","key","PokemonDetailPage","toggleEvolutions","showEvolutions","undefined","match","fetchData","getPokemonDetails","prevProps","prevId","currentId","evolution","e","idx","pageTitle","pokemonProfile","aria-hidden","variant","onClick","renderEvolutions","JSON","stringify","NavHeader","bg","Brand","as","Link","App","basename","process","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6c577b29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PokemonListDetailPage_container__2hwuK\"};","import * as React from \"react\";\nimport { Container, Table } from \"react-bootstrap\";\n\nexport default class AboutPage extends React.Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <h1>Pokedex</h1>\n\n          <p>\n            The Pokédex is an electronic device designed to catalogue and\n            provide information regarding the various species of Pokémon\n            featured in the Pokémon video game, anime and manga series.\n          </p>\n\n          <p>\n            The name Pokédex is a neologism including \"Pokémon\" (which itself is\n            a portmanteau of \"pocket\" and \"monster\") and \"index\". The Japanese\n            name is simply \"Pokémon Encyclopedia\", and it can feature every\n            Pokémon on it, depending on the Pokédex.\n          </p>\n\n          <figure>\n            <img\n              src=\"https://giantbomb1.cbsistatic.com/uploads/original/2/27545/1066177-ashpokedex2.png\"\n              alt=\"pokedex\"\n            />\n            <figcaption>Pokedex from ep1 of anime.</figcaption>\n            <cite>\n              <a href=\"https://www.giantbomb.com/pokedex/3055-1310/\">\n                Giantbomb\n              </a>\n            </cite>\n          </figure>\n\n          <div>\n            <h2> Num Pokemons </h2>\n\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Generation</th>\n                  <th>New Pokemon</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>Gen 1</td>\n                  <td>151</td>\n                </tr>\n                <tr>\n                  <td>Gen 2</td>\n                  <td>100</td>\n                </tr>\n              </tbody>\n            </Table>\n          </div>\n\n          <div>\n            <iframe\n              title=\"theme song\"\n              width=\"560\"\n              height=\"315\"\n              src=\"https://www.youtube.com/embed/QCILyXK1U58\"\n              frameBorder=\"0\"\n              allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n            />\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n","import { IRawPokemon, IPokemonMini, IPokemon, IRawPokemonDescription, IRawEvolution } from \"../models/pokemon\";\nimport axios from \"axios\";\n\nimport payloadPokemons from './sample_data/all.json';\nimport payloadPokemonDetail from './sample_data/pokemon_detail.json';\nimport payloadPokemonDescription from './sample_data/pokemon_description.json';\nimport payloadPokemonEvolution from './sample_data/pokemon_evolution.json';\nconst BASE_IMAGE_URL =\n  \"https://assets.pokemon.com/assets/cms2/img/pokedex/full\";\n\nconst API_BASE = \"https://pokeapi.co/api/v2\";\n\n\nconst USE_MOCK = false;\n\nexport class PokemonService {\n\n\n  static async getPokemonDetails(id:number|string, mock=USE_MOCK): Promise<IPokemon> {\n    let rawPokemonData:IRawPokemon ;\n    let rawPokemonEvolutionData:IRawEvolution;\n    let rawPokemonDescription: IRawPokemonDescription;\n\n    let pokemonData: IPokemon ;\n    const pokemonId = Number(id);\n\n  \n    if (mock){\n      rawPokemonData = payloadPokemonDetail;\n      rawPokemonEvolutionData = payloadPokemonEvolution;\n      rawPokemonDescription = payloadPokemonDescription;\n    }else{\n      const urlDetail = `${API_BASE}/pokemon/${pokemonId}`;\n\n      const responseDetail = await axios.get(urlDetail);\n      rawPokemonData = responseDetail.data;\n\n      const responseDescription = await axios.get(`${API_BASE}/pokemon-species/${pokemonId}`);\n      rawPokemonDescription = responseDescription.data;\n\n\n      const responseEvolution = await axios.get(rawPokemonDescription.evolution_chain.url);\n      \n\n      \n      rawPokemonEvolutionData =  responseEvolution.data;\n\n    }\n\n    let evolutions = this.extractEvolutionChain(rawPokemonEvolutionData);\n    \n\n    pokemonData = {\n      id:rawPokemonData.id\n      , name:rawPokemonData.name\n      , weight: rawPokemonData.weight\n      , height: rawPokemonData.height\n      , image:this.getImageUrl(pokemonId)\n      , types: rawPokemonData.types.map(t=>t.type.name)\n      , abilities: rawPokemonData.abilities.map(a=>a.ability.name)\n      , description: rawPokemonDescription.flavor_text_entries.filter(f=>f.language.name===\"en\")[0].flavor_text\n      , evolutions: evolutions\n    };\n\n\n    return pokemonData;\n  }\n\n  static async getPokemons(limit = 151, mock=USE_MOCK): Promise<IPokemonMini[]> {\n    let pokemons: IPokemonMini[];\n\n    if (mock){\n      pokemons = payloadPokemons.results;\n    } else {\n\n      const url = `${API_BASE}/pokemon`;\n      const queryParams = { limit: limit };\n  \n      const response = await axios.get(url, { params: queryParams });\n  \n      const data = response.data;\n  \n      pokemons = data.results;\n\n    }\n\n\n    pokemons.forEach((p, index) => {\n      const id = index + 1;\n      p.image = this.getImageUrl(id);\n      p.id = id;\n    });\n\n    return pokemons;\n  }\n\n\n  static getImageUrl(id: number) {\n    //.padStart(8, \"0\");\n    const paddedId = id.toString().padStart(3, \"0\");\n\n    return `${BASE_IMAGE_URL}/${paddedId}.png`;\n  }\n\n\n  private static  extractEvolutionChain(chain:IRawEvolution) : IPokemonMini[] {\n    let evoChain = [];\n    let evoData = chain.chain;\n\n\n    while (evoData) {\n        if (evoData.species){\n            const data = evoData.species;\n            let idStr = data.url.split(\"/\").reverse()[1];\n            const id = Number ( idStr)\n\n            const pokemonData = {...data , id: id\n            , image: this.getImageUrl(id)\n            }\n           \n            evoChain.push(pokemonData);\n            evoData = evoData.evolves_to[0];\n        }\n    }\n    \n\n    return evoChain;\n}\n}\n","import * as React from \"react\";\nimport styles from \"./PokemonCard.module.css\";\nimport { IPokemonMini } from \"../models/pokemon\";\nimport { Link } from \"react-router-dom\";\n\n\n\ninterface Props {\n  pokemon: IPokemonMini;\n}\ninterface State {}\n\n\nexport default class PokemonCard extends React.Component<Props, State> {\n  render() {\n    const { pokemon } = this.props;\n    if (pokemon) {\n      return (\n        <div className={styles.card} >\n          <h1 className={styles.title}>{pokemon.name}</h1>\n          <div className={styles.image}>\n            <img src={pokemon.image} alt={pokemon.name} />\n          </div>\n          <Link to={`/detail/${pokemon.id}`}># {pokemon.id}</Link>\n\n         \n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n","import * as React from \"react\";\nimport { PokemonService } from \"../services/PokemonService\";\nimport { IPokemonMini } from \"../models/pokemon\";\nimport PokemonCard from \"../components/PokemonCard\";\nimport styles from \"./PokemonListDetailPage.module.css\";\n\n\ninterface IProps {}\ninterface IState {\n  pokemons: IPokemonMini[];\n}\nexport default class PokemonListDetailPage extends React.Component<\n  IProps,\n  IState\n> {\n  async componentDidMount() {\n    const pokemons = await PokemonService.getPokemons();\n\n    this.setState({ pokemons: pokemons });\n  }\n\n  render() {\n    \n    const pokemons = this.state?.pokemons;\n\n    if (pokemons) {\n      return (\n        <div className=\"container\">\n          <div className={styles.container}>\n            {pokemons.map((p, index) => {\n              return <PokemonCard key={index} pokemon={p} />;\n            })}\n          </div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n","import * as React from \"react\";\nimport { PokemonService } from \"../services/PokemonService\";\nimport {  IPokemon } from \"../models/pokemon\";\nimport PokemonCard from \"../components/PokemonCard\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Badge from 'react-bootstrap/Badge'\nimport styles from \"./PokemonDetailPage.module.css\";\n\n\n//type IProps = {};\n\ntype IState = {\n  pokemon?: IPokemon;\n  showEvolutions: boolean;\n};\n\ninterface RouteParams {\n  id: string\n}\n\ninterface IProps extends RouteComponentProps<RouteParams> {}\n\nexport default class PokemonDetailPage extends React.Component<IProps, IState> {\n  \n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      showEvolutions: false,\n      pokemon: undefined\n    }\n  }\n\n  \n  async componentDidMount() {\n    const { id } = this.props.match.params;\n\n    this.fetchData(id);\n\n  }\n\n  toggleEvolutions = ()=>{\n    this.setState ({showEvolutions: !this.state.showEvolutions})\n\n  };\n\n  async fetchData(id:string){\n    const pokemonData = await PokemonService.getPokemonDetails(id);\n\n    this.setState({ pokemon: pokemonData });\n  }\n\n\n  async componentDidUpdate(prevProps:IProps) {\n    \n    const prevId = prevProps.match.params.id;\n    const currentId = this.props.match.params.id;\n\n    if (prevId !== currentId) {\n      this.fetchData(currentId);\n    }\n  }\n\n\n  renderEvolutions(){\n    \n    const pokemon = this.state?.pokemon;\n\n    if (this.state.showEvolutions){\n      \n      return (\n        <div >\n                <h2>Evolutions </h2>\n                <div className={styles.evolution}>\n                    {pokemon?.evolutions.map((e, idx) => {\n                        return <PokemonCard key={idx} pokemon={e}/>\n                    })}\n\n                </div>\n                \n\n              </div>\n      )\n    }else{\n      return null;\n    }\n\n  }\n\n  render() {\n    const pokemon = this.state?.pokemon;\n    \n    if (pokemon) {\n      return (\n        <div>\n          <Container>\n              <div className={styles.pageTitle}>\n                <h1> {pokemon.name} # {pokemon.id} </h1>\n\n              </div>\n              \n              <Row>\n                <Col>\n                    <div className={styles.pokemonProfile}>\n                        <img src={pokemon.image} aria-hidden alt={`pokemon ${pokemon.name}`}></img>\n\n                    </div>\n                </Col>\n\n                <Col>\n                    <div>\n                        {pokemon.description}\n                      </div>\n\n                    <div className={styles.abilities}>\n                        <h3>Abilties</h3>\n\n                        <div>\n                          {pokemon.abilities.map((ability, idx) => {\n                              return <Badge key={idx} variant=\"primary\" className=\"mr-1\">{ability}</Badge>\n                          })}\n\n                        </div>\n                    </div>\n                    \n\n                    <div className={styles.types}>\n                      <h3>Types</h3>\n                      <div>\n                        {pokemon.types.map((type, idx) => {\n                            return <Badge key={idx} variant=\"primary\" className=\"mr-1\">{type}</Badge>\n                        })}\n\n                      </div>\n                    </div>\n\n\n\n                </Col>\n              </Row>\n\n              \n\n              \n              <div className=\"my-5\">\n                <Button onClick={this.toggleEvolutions} >Show Evolutions</Button>\n              </div>\n\n              {this.renderEvolutions()}\n              \n\n              <div>\n                {/* <PokemonCard pokemon={pokemon} /> */}\n\n                <pre>\n                        {JSON.stringify(pokemon, null, 2)}\n                </pre>\n\n              </div>\n\n          </Container>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n//           <div> {pokemon.types[0].type.name} </div>\n","import * as React from \"react\";\n\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default class NavHeader extends React.Component {\n  render() {\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand as={Link} to=\"/\">PokeApi</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n\n          <Nav.Link as={Link} to=\"/\">All</Nav.Link>\n          <Nav.Link as={Link} to=\"/detail/5\">Detail</Nav.Link>\n          <Nav.Link as={Link} to=\"/about\">About</Nav.Link>\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n","import React from 'react';\n\nimport AboutPage from \"./containers/AboutPage\";\n\nimport PokemonListDetailPage from \"./containers/PokemonListDetailPage\";\nimport PokemonDetailPage from \"./containers/PokemonDetailPage\";\nimport NavHeader from \"./components/NavHeader\";\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  //  useRouteMatch,\n  //  useParams\n} from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nexport default function App() {\n  return (\n\n    <Router basename={process.env.PUBLIC_URL}>\n      <div>\n        <NavHeader />\n\n        <Switch>\n          <Route exact path=\"/\" component={PokemonListDetailPage} />\n          <Route exact path=\"/about\" component={AboutPage} />\n          <Route exact path=\"/all\" component={PokemonListDetailPage} />\n          <Route exact path=\"/detail/:id\" component={PokemonDetailPage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PokemonDetailPage_container__lb69N\",\"evolution\":\"PokemonDetailPage_evolution__1B1sy\",\"pageTitle\":\"PokemonDetailPage_pageTitle__1mfvh\",\"abilities\":\"PokemonDetailPage_abilities__1inbY\",\"types\":\"PokemonDetailPage_types__2RPAS\",\"pokemonProfile\":\"PokemonDetailPage_pokemonProfile__20eDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"PokemonCard_card__inzGq\",\"data\":\"PokemonCard_data__2N1Xn\",\"title\":\"PokemonCard_title__1ZIGJ\",\"image\":\"PokemonCard_image__1Uycc\"};"],"sourceRoot":""}